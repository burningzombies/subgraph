// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ListingCancelled extends ethereum.Event {
  get params(): ListingCancelled__Params {
    return new ListingCancelled__Params(this);
  }
}

export class ListingCancelled__Params {
  _event: ListingCancelled;

  constructor(event: ListingCancelled) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ListingCreated extends ethereum.Event {
  get params(): ListingCreated__Params {
    return new ListingCreated__Params(this);
  }
}

export class ListingCreated__Params {
  _event: ListingCreated;

  constructor(event: ListingCreated) {
    this._event = event;
  }

  get seller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Sale extends ethereum.Event {
  get params(): Sale__Params {
    return new Sale__Params(this);
  }
}

export class Sale__Params {
  _event: Sale;

  constructor(event: Sale) {
    this._event = event;
  }

  get seller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class BurningZombiesMarket__getListingResult {
  value0: Address;
  value1: Address;
  value2: BigInt;
  value3: BigInt;
  value4: boolean;

  constructor(
    value0: Address,
    value1: Address,
    value2: BigInt,
    value3: BigInt,
    value4: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    return map;
  }
}

export class BurningZombiesMarket extends ethereum.SmartContract {
  static bind(address: Address): BurningZombiesMarket {
    return new BurningZombiesMarket("BurningZombiesMarket", address);
  }

  currentRate(): BigInt {
    let result = super.call("currentRate", "currentRate():(uint256)", []);

    return result[0].toBigInt();
  }

  try_currentRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("currentRate", "currentRate():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getListing(tokenId: BigInt): BurningZombiesMarket__getListingResult {
    let result = super.call(
      "getListing",
      "getListing(uint256):(address,address,uint256,uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );

    return new BurningZombiesMarket__getListingResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBoolean()
    );
  }

  try_getListing(
    tokenId: BigInt
  ): ethereum.CallResult<BurningZombiesMarket__getListingResult> {
    let result = super.tryCall(
      "getListing",
      "getListing(uint256):(address,address,uint256,uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BurningZombiesMarket__getListingResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBoolean()
      )
    );
  }

  getReflectionBalance(tokenId: BigInt): BigInt {
    let result = super.call(
      "getReflectionBalance",
      "getReflectionBalance(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );

    return result[0].toBigInt();
  }

  try_getReflectionBalance(tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getReflectionBalance",
      "getReflectionBalance(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getReflectionBalances(): BigInt {
    let result = super.call(
      "getReflectionBalances",
      "getReflectionBalances():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getReflectionBalances(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getReflectionBalances",
      "getReflectionBalances():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  reflectionBalance(): BigInt {
    let result = super.call(
      "reflectionBalance",
      "reflectionBalance():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_reflectionBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "reflectionBalance",
      "reflectionBalance():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalDividend(): BigInt {
    let result = super.call("totalDividend", "totalDividend():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalDividend(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalDividend",
      "totalDividend():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get masterContractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get devRoyalty(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get minterRoyalty(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get reflectionRoyalty(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class BuyCall extends ethereum.Call {
  get inputs(): BuyCall__Inputs {
    return new BuyCall__Inputs(this);
  }

  get outputs(): BuyCall__Outputs {
    return new BuyCall__Outputs(this);
  }
}

export class BuyCall__Inputs {
  _call: BuyCall;

  constructor(call: BuyCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BuyCall__Outputs {
  _call: BuyCall;

  constructor(call: BuyCall) {
    this._call = call;
  }
}

export class CancelListingCall extends ethereum.Call {
  get inputs(): CancelListingCall__Inputs {
    return new CancelListingCall__Inputs(this);
  }

  get outputs(): CancelListingCall__Outputs {
    return new CancelListingCall__Outputs(this);
  }
}

export class CancelListingCall__Inputs {
  _call: CancelListingCall;

  constructor(call: CancelListingCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelListingCall__Outputs {
  _call: CancelListingCall;

  constructor(call: CancelListingCall) {
    this._call = call;
  }
}

export class ClaimRewardCall extends ethereum.Call {
  get inputs(): ClaimRewardCall__Inputs {
    return new ClaimRewardCall__Inputs(this);
  }

  get outputs(): ClaimRewardCall__Outputs {
    return new ClaimRewardCall__Outputs(this);
  }
}

export class ClaimRewardCall__Inputs {
  _call: ClaimRewardCall;

  constructor(call: ClaimRewardCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimRewardCall__Outputs {
  _call: ClaimRewardCall;

  constructor(call: ClaimRewardCall) {
    this._call = call;
  }
}

export class ClaimRewardsCall extends ethereum.Call {
  get inputs(): ClaimRewardsCall__Inputs {
    return new ClaimRewardsCall__Inputs(this);
  }

  get outputs(): ClaimRewardsCall__Outputs {
    return new ClaimRewardsCall__Outputs(this);
  }
}

export class ClaimRewardsCall__Inputs {
  _call: ClaimRewardsCall;

  constructor(call: ClaimRewardsCall) {
    this._call = call;
  }
}

export class ClaimRewardsCall__Outputs {
  _call: ClaimRewardsCall;

  constructor(call: ClaimRewardsCall) {
    this._call = call;
  }
}

export class CreateListingCall extends ethereum.Call {
  get inputs(): CreateListingCall__Inputs {
    return new CreateListingCall__Inputs(this);
  }

  get outputs(): CreateListingCall__Outputs {
    return new CreateListingCall__Outputs(this);
  }
}

export class CreateListingCall__Inputs {
  _call: CreateListingCall;

  constructor(call: CreateListingCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get price(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CreateListingCall__Outputs {
  _call: CreateListingCall;

  constructor(call: CreateListingCall) {
    this._call = call;
  }
}

export class CreatePrivateListingCall extends ethereum.Call {
  get inputs(): CreatePrivateListingCall__Inputs {
    return new CreatePrivateListingCall__Inputs(this);
  }

  get outputs(): CreatePrivateListingCall__Outputs {
    return new CreatePrivateListingCall__Outputs(this);
  }
}

export class CreatePrivateListingCall__Inputs {
  _call: CreatePrivateListingCall;

  constructor(call: CreatePrivateListingCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get price(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get buyer(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class CreatePrivateListingCall__Outputs {
  _call: CreatePrivateListingCall;

  constructor(call: CreatePrivateListingCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class ReflectToHoldersCall extends ethereum.Call {
  get inputs(): ReflectToHoldersCall__Inputs {
    return new ReflectToHoldersCall__Inputs(this);
  }

  get outputs(): ReflectToHoldersCall__Outputs {
    return new ReflectToHoldersCall__Outputs(this);
  }
}

export class ReflectToHoldersCall__Inputs {
  _call: ReflectToHoldersCall;

  constructor(call: ReflectToHoldersCall) {
    this._call = call;
  }
}

export class ReflectToHoldersCall__Outputs {
  _call: ReflectToHoldersCall;

  constructor(call: ReflectToHoldersCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetDevRoyaltyCall extends ethereum.Call {
  get inputs(): SetDevRoyaltyCall__Inputs {
    return new SetDevRoyaltyCall__Inputs(this);
  }

  get outputs(): SetDevRoyaltyCall__Outputs {
    return new SetDevRoyaltyCall__Outputs(this);
  }
}

export class SetDevRoyaltyCall__Inputs {
  _call: SetDevRoyaltyCall;

  constructor(call: SetDevRoyaltyCall) {
    this._call = call;
  }

  get royalty(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDevRoyaltyCall__Outputs {
  _call: SetDevRoyaltyCall;

  constructor(call: SetDevRoyaltyCall) {
    this._call = call;
  }
}

export class SetMasterContractAddressCall extends ethereum.Call {
  get inputs(): SetMasterContractAddressCall__Inputs {
    return new SetMasterContractAddressCall__Inputs(this);
  }

  get outputs(): SetMasterContractAddressCall__Outputs {
    return new SetMasterContractAddressCall__Outputs(this);
  }
}

export class SetMasterContractAddressCall__Inputs {
  _call: SetMasterContractAddressCall;

  constructor(call: SetMasterContractAddressCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetMasterContractAddressCall__Outputs {
  _call: SetMasterContractAddressCall;

  constructor(call: SetMasterContractAddressCall) {
    this._call = call;
  }
}

export class SetMinterRoyaltyCall extends ethereum.Call {
  get inputs(): SetMinterRoyaltyCall__Inputs {
    return new SetMinterRoyaltyCall__Inputs(this);
  }

  get outputs(): SetMinterRoyaltyCall__Outputs {
    return new SetMinterRoyaltyCall__Outputs(this);
  }
}

export class SetMinterRoyaltyCall__Inputs {
  _call: SetMinterRoyaltyCall;

  constructor(call: SetMinterRoyaltyCall) {
    this._call = call;
  }

  get royalty(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinterRoyaltyCall__Outputs {
  _call: SetMinterRoyaltyCall;

  constructor(call: SetMinterRoyaltyCall) {
    this._call = call;
  }
}

export class SetReflectionRoyaltyCall extends ethereum.Call {
  get inputs(): SetReflectionRoyaltyCall__Inputs {
    return new SetReflectionRoyaltyCall__Inputs(this);
  }

  get outputs(): SetReflectionRoyaltyCall__Outputs {
    return new SetReflectionRoyaltyCall__Outputs(this);
  }
}

export class SetReflectionRoyaltyCall__Inputs {
  _call: SetReflectionRoyaltyCall;

  constructor(call: SetReflectionRoyaltyCall) {
    this._call = call;
  }

  get royalty(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetReflectionRoyaltyCall__Outputs {
  _call: SetReflectionRoyaltyCall;

  constructor(call: SetReflectionRoyaltyCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}
